From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: deepak1556 <hop2deep@gmail.com>
Date: Tue, 26 Feb 2019 17:04:14 -0800
Subject: Allow embedder to reuse the per process NativeModuleLoader


diff --git a/src/node_native_module.cc b/src/node_native_module.cc
index 41f1588c4da7929989625c5706b009991722178d..47d3d94f1277904e3128dc03aee0f41c26ab91b0 100644
--- a/src/node_native_module.cc
+++ b/src/node_native_module.cc
@@ -115,6 +115,7 @@ Local<String> NativeModuleLoader::GetConfigString(Isolate* isolate) const {
 
 NativeModuleLoader::NativeModuleLoader() : config_(GetConfig()) {
   LoadJavaScriptSource();
+  LoadEmbedderJavaScriptSource();
   LoadCodeCache();
 }
 
diff --git a/src/node_native_module.h b/src/node_native_module.h
index be1fc92a7672f38dff6213df081800e4e6b99ad1..cbf625fc4df290cf774ce394f525019e331cd79c 100644
--- a/src/node_native_module.h
+++ b/src/node_native_module.h
@@ -26,7 +26,7 @@ using NativeModuleCacheMap =
 // This class should not depend on a particular isolate, context, or
 // environment. Rather it should take them as arguments when necessary.
 // The instances of this class are per-process.
-class NativeModuleLoader {
+class NODE_EXTERN NativeModuleLoader {
  public:
   NativeModuleLoader();
   // TODO(joyeecheung): maybe we should make this a singleton, instead of
@@ -72,6 +72,7 @@ class NativeModuleLoader {
 
   // Generated by tools/js2c.py as node_javascript.cc
   void LoadJavaScriptSource();  // Loads data into source_
+  void LoadEmbedderJavaScriptSource();  // Loads embedder data into source_
   UnionBytes GetConfig();       // Return data for config.gypi
 
   // Generated by tools/generate_code_cache.js as node_code_cache.cc when
@@ -95,7 +96,7 @@ class NativeModuleLoader {
 }  // namespace native_module
 
 namespace per_process {
-extern native_module::NativeModuleLoader native_module_loader;
+NODE_EXTERN extern native_module::NativeModuleLoader native_module_loader;
 }  // namespace per_process
 
 }  // namespace node
