From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Cheng Zhao <zcbenz@gmail.com>
Date: Thu, 20 Sep 2018 17:48:49 -0700
Subject: mas_disable_custom_window_frame.patch

Disable private window frame APIs (NSNextStepFrame and NSThemeFrame) for MAS
build.

diff --git a/ui/views_bridge_mac/browser_native_widget_window_mac.mm b/ui/views_bridge_mac/browser_native_widget_window_mac.mm
index e391bf976bf6..41e45901d180 100644
--- a/ui/views_bridge_mac/browser_native_widget_window_mac.mm
+++ b/ui/views_bridge_mac/browser_native_widget_window_mac.mm
@@ -9,6 +9,8 @@
 #include "ui/views_bridge_mac/bridged_native_widget_impl.h"
 #include "ui/views_bridge_mac/mojo/bridged_native_widget_host.mojom.h"
 
+#ifndef MAS_BUILD
+
 @interface NSWindow (PrivateBrowserNativeWidgetAPI)
 + (Class)frameViewClassForStyleMask:(NSUInteger)windowStyle;
 @end
@@ -69,10 +71,14 @@ - (NSRect)_draggableFrame NS_DEPRECATED_MAC(10_10, 10_11) {
 
 @end
 
+#endif  // MAS_BUILD
+
 @implementation BrowserNativeWidgetWindow
 
 // NSWindow (PrivateAPI) overrides.
 
+#ifndef MAS_BUILD
+
 + (Class)frameViewClassForStyleMask:(NSUInteger)windowStyle {
   // - NSThemeFrame and its subclasses will be nil if it's missing at runtime.
   if ([BrowserWindowFrame class])
@@ -87,6 +93,8 @@ - (BOOL)_usesCustomDrawing {
   return NO;
 }
 
+#endif  // MAS_BUILD
+
 // Handle "Move focus to the window toolbar" configured in System Preferences ->
 // Keyboard -> Shortcuts -> Keyboard. Usually Ctrl+F5. The argument (|unknown|)
 // tends to just be nil.
diff --git a/ui/views_bridge_mac/native_widget_mac_frameless_nswindow.mm b/ui/views_bridge_mac/native_widget_mac_frameless_nswindow.mm
index 583003b9789d..57b285fe98fb 100644
--- a/ui/views_bridge_mac/native_widget_mac_frameless_nswindow.mm
+++ b/ui/views_bridge_mac/native_widget_mac_frameless_nswindow.mm
@@ -4,6 +4,8 @@
 
 #import "ui/views_bridge_mac/native_widget_mac_frameless_nswindow.h"
 
+#ifndef MAS_BUILD
+
 @interface NSWindow (PrivateAPI)
 + (Class)frameViewClassForStyleMask:(NSUInteger)windowStyle;
 @end
@@ -18,8 +20,12 @@ - (CGFloat)_titlebarHeight {
 }
 @end
 
+#endif  // MAS_BUILD
+
 @implementation NativeWidgetMacFramelessNSWindow
 
+#ifndef MAS_BUILD
+
 + (Class)frameViewClassForStyleMask:(NSUInteger)windowStyle {
   if ([NativeWidgetMacFramelessNSWindowFrame class]) {
     return [NativeWidgetMacFramelessNSWindowFrame class];
@@ -27,4 +33,6 @@ + (Class)frameViewClassForStyleMask:(NSUInteger)windowStyle {
   return [super frameViewClassForStyleMask:windowStyle];
 }
 
+#endif   // MAS_BUILD
+
 @end
diff --git a/ui/views_bridge_mac/native_widget_mac_nswindow.h b/ui/views_bridge_mac/native_widget_mac_nswindow.h
index 30b091bb60ed..8e54c6057250 100644
--- a/ui/views_bridge_mac/native_widget_mac_nswindow.h
+++ b/ui/views_bridge_mac/native_widget_mac_nswindow.h
@@ -17,6 +17,8 @@ class BridgedNativeWidgetImpl;
 
 @protocol WindowTouchBarDelegate;
 
+#ifndef MAS_BUILD
+
 // Weak lets Chrome launch even if a future macOS doesn't have the below classes
 
 WEAK_IMPORT_ATTRIBUTE
@@ -33,6 +35,8 @@ VIEWS_EXPORT
 @interface NativeWidgetMacNSWindowTitledFrame : NSThemeFrame
 @end
 
+#endif  // MAS_BUILD
+
 // The NSWindow used by BridgedNativeWidget. Provides hooks into AppKit that
 // can only be accomplished by overriding methods.
 VIEWS_EXPORT
diff --git a/ui/views_bridge_mac/native_widget_mac_nswindow.mm b/ui/views_bridge_mac/native_widget_mac_nswindow.mm
index fac57d31027e..259833c8e910 100644
--- a/ui/views_bridge_mac/native_widget_mac_nswindow.mm
+++ b/ui/views_bridge_mac/native_widget_mac_nswindow.mm
@@ -15,7 +15,9 @@
 #import "ui/views_bridge_mac/window_touch_bar_delegate.h"
 
 @interface NSWindow (Private)
+#ifndef MAS_BUILD
 + (Class)frameViewClassForStyleMask:(NSWindowStyleMask)windowStyle;
+#endif
 - (BOOL)hasKeyAppearance;
 - (long long)_resizeDirectionForMouseLocation:(CGPoint)location;
 
@@ -56,6 +58,8 @@ - (void)cr_mouseDownOnFrameView:(NSEvent*)event {
 }
 @end
 
+#ifndef MAS_BUILD
+
 @implementation NativeWidgetMacNSWindowTitledFrame
 - (void)mouseDown:(NSEvent*)event {
   [self cr_mouseDownOnFrameView:event];
@@ -76,6 +80,8 @@ - (BOOL)usesCustomDrawing {
 }
 @end
 
+#endif  // MAS_BUILD
+
 @implementation NativeWidgetMacNSWindow {
  @private
   base::scoped_nsobject<CommandDispatcher> commandDispatcher_;
@@ -148,6 +154,8 @@ - (id)rootAccessibilityObject {
 
 // NSWindow overrides.
 
+#ifndef MAS_BUILD
+
 + (Class)frameViewClassForStyleMask:(NSWindowStyleMask)windowStyle {
   if (windowStyle & NSWindowStyleMaskTitled) {
     if (Class customFrame = [NativeWidgetMacNSWindowTitledFrame class])
@@ -159,6 +167,8 @@ + (Class)frameViewClassForStyleMask:(NSWindowStyleMask)windowStyle {
   return [super frameViewClassForStyleMask:windowStyle];
 }
 
+#endif  // MAS_BUILD
+
 - (BOOL)_isTitleHidden {
   bool shouldShowWindowTitle = YES;
   if (bridgeImpl_)
